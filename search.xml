<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>阿里云oss文件存储服务器在项目中的使用</title>
      <link href="/2021/06117521.html"/>
      <url>/2021/06117521.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、对象存储OSS"><a href="#一、对象存储OSS" class="headerlink" title="一、对象存储OSS"></a>一、对象存储OSS</h3><p>​        为了解决海量数据存储与弹性扩容，项目中我们采用云存储的解决方案 - 阿里云 OSS 。</p><h5 id="1、开通“对象存储OSS”服务"><a href="#1、开通“对象存储OSS”服务" class="headerlink" title="1、开通“对象存储OSS”服务"></a>1、开通“对象存储OSS”服务</h5><p>（ 0 ）<a href="http://www.aliyun.com/">www.aliyun.com</a></p><p>（ 1 ）申请阿里云账号</p><p>（ 2 ）实名认证</p><p>（ 3 ）开通 “ 对象存储 OSS” 服务</p><p>（ 4 ）进入管理控制台</p><h5 id="2创建Bucket"><a href="#2创建Bucket" class="headerlink" title="2创建Bucket"></a>2创建Bucket</h5><p>地域根据自己的所在地填写 (看个人)</p><p>选择标准存储,</p><p>版本控制可以开通,但不是非要开通 </p><p>读写模式选择 公共读</p><p><img src="https://i.loli.net/2021/06/12/U7DG3TCfpH8XVhO.png"></p><h5 id="3-创建完成之后我们上传图片"><a href="#3-创建完成之后我们上传图片" class="headerlink" title="3.创建完成之后我们上传图片"></a>3.创建完成之后我们上传图片</h5><p><img src="https://i.loli.net/2021/06/12/xhCvu57okMXJYS1.png"></p><h5 id="4-创建RAM子用户"><a href="#4-创建RAM子用户" class="headerlink" title="4.创建RAM子用户"></a>4.创建RAM子用户</h5><p>进入里面如果出现进行使用AccessKey就不需要创子用户</p><p>没有就创建</p><p><img src="https://i.loli.net/2021/06/12/Qge2zuxvB6TXRjO.png"></p><p>二 、 使用SDK</p><p>退出控制台 到达首页点击文档  找到存储下面的 对象存储oss 点击进入</p><p>找到 SDK示列</p><p>找到java</p><p><img src="https://i.loli.net/2021/06/12/ixtOP6XovGRauzJ.png"></p><h3 id="三、创建Spring-boot项目加入依赖"><a href="#三、创建Spring-boot项目加入依赖" class="headerlink" title="三、创建Spring boot项目加入依赖"></a>三、创建Spring boot项目加入依赖</h3><h5 id="1-maven模块也要加入依赖"><a href="#1-maven模块也要加入依赖" class="headerlink" title="1 maven模块也要加入依赖"></a>1 maven模块也要加入依赖</h5><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 阿里云oss依赖 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aliyun.oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aliyun-sdk-oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--日期工具栏依赖--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>joda-time<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>joda-time<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h5 id="2-配置application-properties"><a href="#2-配置application-properties" class="headerlink" title="2 配置application,properties"></a>2 配置application,properties</h5><pre class=" language-properties"><code class="language-properties"><span class="token comment" spellcheck="true">#阿里云 OSS</span><span class="token comment" spellcheck="true">#不同的服务器，地址不同</span><span class="token attr-name">aliyun.oss.file.endpoint</span><span class="token punctuation">=</span><span class="token attr-value">oss-cn-hangzho3u.aliyuncs.com   # 地址填写一开始注册的地区 杭州改为自己的地区</span><span class="token attr-name">aliyun.oss.file.keyid</span><span class="token punctuation">=</span><span class="token attr-value">LTAI4GBABS7Sq8M21Lf2RNwLuu     #  自己对象存储 keyid</span><span class="token attr-name">aliyun.oss.file.keysecret</span><span class="token punctuation">=</span><span class="token attr-value">ynfsD31FLdcRoQVFSI2dHP7AeoKaf4o  #自己对象存储的keysecret</span><span class="token comment" spellcheck="true">#bucket可以在控制台创建，也可以使用java代码创建</span><span class="token attr-name">aliyun.oss.file.bucketname</span><span class="token punctuation">=</span><span class="token attr-value">achang-edu     #这里填写自己的bucket</span></code></pre><p>如果找不到我说一下 地址在控制台bucket里面 </p><p>快速找到keyid以及keysecret  在控制台鼠标放上头像上看到Accesskey点击进去</p><p>会提示进行使用还是新建   还是老样子 有就进行使用 没有就创建(如果没有弹出提示框那就说明你没有创面RAM子用户)</p><h3 id="二、实现文件上传"><a href="#二、实现文件上传" class="headerlink" title="二、实现文件上传"></a>二、实现文件上传</h3><h5 id="1-首先在controller以及entity同级包下创建一个config文件夹"><a href="#1-首先在controller以及entity同级包下创建一个config文件夹" class="headerlink" title="1.首先在controller以及entity同级包下创建一个config文件夹"></a>1.首先在controller以及entity同级包下创建一个config文件夹</h5><h5 id="2、在confg类中创建配置文件类"><a href="#2、在confg类中创建配置文件类" class="headerlink" title="2、在confg类中创建配置文件类"></a>2、在confg类中创建配置文件类</h5><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//常量类，读取配置文件application.properties中的配置</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConstantPropertiesUtil</span> <span class="token keyword">implements</span> <span class="token class-name">InitializingBean</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${aliyun.oss.file.endpoint}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String endpoint<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${aliyun.oss.file.keyid}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String keyid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${aliyun.oss.file.keysecret}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String keysecret<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${aliyun.oss.file.bucketname}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String bucketname<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String END_POINT<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String KEY_ID<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String KEY_SECRET<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String BUCKET_NAME<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        KEY_ID<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>keyid<span class="token punctuation">;</span>        KEY_SECRET<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>keysecret<span class="token punctuation">;</span>        END_POINT<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>endpoint<span class="token punctuation">;</span>        BUCKET_NAME<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>bucketname<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="3、创建service接口"><a href="#3、创建service接口" class="headerlink" title="3、创建service接口"></a>3、创建service接口</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span>  <span class="token class-name">OssService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//上传头像到oss</span>    String  <span class="token function">uploadFileAvatar</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="4、创建service的实现类"><a href="#4、创建service的实现类" class="headerlink" title="4、创建service的实现类"></a>4、创建service的实现类</h5><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//头像上传到oss</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">uploadFileAvator</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 工具类获取值</span>        String endpoint <span class="token operator">=</span> ConstantPropertiesUtils<span class="token punctuation">.</span>END_POINT<span class="token punctuation">;</span>        String accessKeyId <span class="token operator">=</span> ConstantPropertiesUtils<span class="token punctuation">.</span>ACCESS_KEY_ID<span class="token punctuation">;</span>        String accessKeySecret <span class="token operator">=</span> ConstantPropertiesUtils<span class="token punctuation">.</span>ACCESS_KEY_SECRET<span class="token punctuation">;</span>        String bucketName <span class="token operator">=</span> ConstantPropertiesUtils<span class="token punctuation">.</span>BUCKET_NAME<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 创建OSS实例</span>            OSS ossClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OSSClientBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> accessKeyId<span class="token punctuation">,</span> accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 上传文件流。</span>            InputStream inputStream <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取文件名称</span>            String fileName  <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//在文件名称里面添加随机唯一的值</span>            String uuid <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fileName <span class="token operator">=</span> uuid <span class="token operator">+</span> fileName<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//把文件按日期进行分类</span>            <span class="token comment" spellcheck="true">// 2020/10/08/1.jpg</span>            <span class="token comment" spellcheck="true">//获取当前日期</span>            String datePath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">"yyyy/MM/dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//拼接</span>            fileName <span class="token operator">=</span> datePath <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> fileName<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//调用oss方法实现上传</span>            <span class="token comment" spellcheck="true">//第一个参数  Bucket名称</span>            <span class="token comment" spellcheck="true">//第二个参数  上传到oss文件路径和文件名称  aa/bb/1.jpg</span>            <span class="token comment" spellcheck="true">//第三个参数  上传文件输入流</span>            ossClient<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">,</span> fileName<span class="token punctuation">,</span> inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 关闭OSSClient。</span>            ossClient<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//把上传之后文件路径返回</span>            <span class="token comment" spellcheck="true">//需要把上传到阿里云oss路径手动拼接出来</span>            <span class="token comment" spellcheck="true">//   https://guli-edu-20201.oss-cn-beijing.aliyuncs.com/1.jpg</span>            String url <span class="token operator">=</span> <span class="token string">"https://"</span><span class="token operator">+</span>bucketName<span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span>endpoint<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>fileName<span class="token punctuation">;</span>            <span class="token keyword">return</span> url<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span></code></pre><h5 id="5、创建controller"><a href="#5、创建controller" class="headerlink" title="5、创建controller"></a>5、创建controller</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">"阿里云文件管理"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/eduoss/fileoss"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@CrossOrigin</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> OssService ossService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"文件上传"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> R <span class="token function">uploadOssFile</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"file"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"文件"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>                            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span> MultipartFile file<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//返回上传到oss的路径</span>        String url <span class="token operator">=</span> ossService<span class="token punctuation">.</span><span class="token function">uploadFileAvator</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> R<span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="重启服务-在swagger中测试文件上传或者postman"><a href="#重启服务-在swagger中测试文件上传或者postman" class="headerlink" title="重启服务  在swagger中测试文件上传或者postman"></a>重启服务  在swagger中测试文件上传或者postman</h3>]]></content>
      
      
      
        <tags>
            
            <tag> oss </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
